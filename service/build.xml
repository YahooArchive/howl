<?xml version="1.0" encoding="UTF-8"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project name="service" default="jar">
  <property name="src.dir" value="${basedir}/src"/>

  <!--
    Override properties defined in ../build-common.xml.
  -->
  <property name="test.junit.output.format" value="plain"/>
  <property name="test.output" value="false"/>
  <property name="test.junit.output.usefile" value="false"/>


  <import file="../build-common.xml"/>

  <path id="test.classpath">
    <pathelement location="${test.build.classes}" />
    <pathelement location="" />
    <pathelement location="${test.data.dir}/conf"/>
    <pathelement location="${hive.conf.dir}"/>
    <fileset dir="${test.src.data.dir}" includes="files/*.jar"/>
    <fileset dir="${hive.root}" includes="testlibs/*.jar"/>
    <pathelement location="${build.dir.hive}/ql/test/classes"/>
    <path refid="classpath"/>
  </path>

  <target name="thriftif">
    <echo>Executing thrift (which needs to be in your path) to build java metastore APIs.... </echo>
    <exec executable="thrift"  failonerror="true" dir=".">
      <arg line="--gen java:beans --gen php --gen py -I ${basedir}/include -I ${basedir}/.. -o ${src.dir} if/hive_service.thrift " />
    </exec>
  </target>

  <target name="core-compile" depends="init">
    <javac
     encoding="${build.encoding}"
     srcdir="${src.dir}/java:${src.dir}/gen-javabean"
     includes="**/*.java"
     destdir="${build.classes}"
     debug="${javac.debug}"
     deprecation="${javac.deprecation}"
     >
      <classpath refid="classpath"/>
    </javac>
  </target>
 
  <target name="compile" depends="core-compile">
  </target>

  <target name="clean">
      <delete dir="${build.classes}/../"/>
  </target>
</project>
