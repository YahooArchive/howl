<?xml version="1.0" encoding="UTF-8"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project name="hwi" default="jar">
  
  <property name="src.dir"  location="${basedir}/src/java"/>
  <import file="../build-common.xml"/>

  <!-- We include servlet jar in addition to the normal
       Hive classpath. Some HWI components are linked
       to the servlet libraries.  -->
  <path id="classpath-hwi">
    <fileset dir="${hadoop.root}/lib" includes="**/*.jar"/>
    <path refid="classpath"/>
  </path>

  <!-- We also need the Jetty jar as HWI is a stand-alone Jetty instance. -->
  <path id="test.classpath">
    <pathelement location="${test.build.classes}" />
    <pathelement location="" />
    <pathelement location="${test.src.data.dir}/conf"/>
    <pathelement location="${hive.conf.dir}"/>
    <!-- We are running unit tests like the one inside ql -->
    <pathelement location="${build.dir.hive}/ql/test/classes"/> 
    <fileset dir="${hive.root}" includes="testlibs/*.jar"/>
    <path refid="classpath-hwi"/>
  </path>

  <!--hive_hwi.war file contains only the JSP sources -->
  <target name="war">
    <jar jarfile="${build.dir.hive}/hwi/hive-hwi-${version}.war" basedir="${basedir}/web"/>
  </target>

  <!-- Compile is a clone of the build-common.xml compile, with one exception:
       We include the war target as a dependency. In this way the war target
       is called without changes to the upstream build infrastructure.
  -->
  <target name="compile" depends="init, install-hadoopcore, setup, war">
    <echo message="Compiling: ${ant.project.name}"/>
    <javac
     encoding="${build.encoding}"
     srcdir="${src.dir}"
     includes="**/*.java"
     destdir="${build.classes}"
     debug="${javac.debug}"
     deprecation="${javac.deprecation}">
      <compilerarg line="${javac.args} ${javac.args.warnings}" />
      <classpath refid="classpath-hwi"/>
    </javac>
  </target>

</project>
