PREHOOK: query: DESCRIBE FUNCTION concat
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION concat
POSTHOOK: type: DESCFUNCTION
concat(str1, str2, ... strN) - returns the concatenation of str1, str2, ... strN
PREHOOK: query: DESCRIBE FUNCTION substr
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION substr
POSTHOOK: type: DESCFUNCTION
substr(str, pos[, len]) - returns the substring of str that starts at pos and is of length len
PREHOOK: query: DESCRIBE FUNCTION substring
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION substring
POSTHOOK: type: DESCFUNCTION
substring(str, pos[, len]) - returns the substring of str that starts at pos and is of length len
PREHOOK: query: DESCRIBE FUNCTION find_in_set
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION find_in_set
POSTHOOK: type: DESCFUNCTION
find_in_set(str,str_array) - Returns the first occurrence  of str in str_array where str_array is a comma-delimited string. Returns null if either argument is null. Returns 0 if the first argument has any commas.
PREHOOK: query: DESCRIBE FUNCTION space
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION space
POSTHOOK: type: DESCFUNCTION
space(n) - returns n spaces
PREHOOK: query: DESCRIBE FUNCTION repeat
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION repeat
POSTHOOK: type: DESCFUNCTION
repeat(str, n) - repeat str n times 
PREHOOK: query: DESCRIBE FUNCTION ascii
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ascii
POSTHOOK: type: DESCFUNCTION
ascii(str) - returns the numeric value of the first character of str
PREHOOK: query: DESCRIBE FUNCTION lpad
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION lpad
POSTHOOK: type: DESCFUNCTION
lpad(str, len, pad) - Returns str, left-padded with pad to a length of len
PREHOOK: query: DESCRIBE FUNCTION rpad
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION rpad
POSTHOOK: type: DESCFUNCTION
rpad(str, len, pad) - Returns str, right-padded with pad to a length of len
PREHOOK: query: DESCRIBE FUNCTION size
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION size
POSTHOOK: type: DESCFUNCTION
size(a) - Returns the size of a
PREHOOK: query: DESCRIBE FUNCTION round
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION round
POSTHOOK: type: DESCFUNCTION
round(x[, d]) - round x to d decimal places
PREHOOK: query: DESCRIBE FUNCTION floor
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION floor
POSTHOOK: type: DESCFUNCTION
floor(x) - Find the largest integer not greater than x
PREHOOK: query: DESCRIBE FUNCTION sqrt
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION sqrt
POSTHOOK: type: DESCFUNCTION
sqrt(x) - returns the square root of x
PREHOOK: query: DESCRIBE FUNCTION ceil
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ceil
POSTHOOK: type: DESCFUNCTION
ceil(x) - Find the smallest integer not smaller than x
PREHOOK: query: DESCRIBE FUNCTION ceiling
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ceiling
POSTHOOK: type: DESCFUNCTION
ceiling(x) - Find the smallest integer not smaller than x
PREHOOK: query: DESCRIBE FUNCTION rand
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION rand
POSTHOOK: type: DESCFUNCTION
rand([seed]) - Returns a pseudorandom number between 0 and 1
PREHOOK: query: DESCRIBE FUNCTION abs
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION abs
POSTHOOK: type: DESCFUNCTION
abs(x) - returns the absolute value of x
PREHOOK: query: DESCRIBE FUNCTION pmod
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION pmod
POSTHOOK: type: DESCFUNCTION
a pmod b - Compute the positive modulo
PREHOOK: query: DESCRIBE FUNCTION ln
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ln
POSTHOOK: type: DESCFUNCTION
ln(x) - Returns the natural logarithm of x
PREHOOK: query: DESCRIBE FUNCTION log2
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION log2
POSTHOOK: type: DESCFUNCTION
log2(x) - Returns the logarithm of x with base 2
PREHOOK: query: DESCRIBE FUNCTION sin
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION sin
POSTHOOK: type: DESCFUNCTION
sin(x) - returns the sine of x (x is in radians)
PREHOOK: query: DESCRIBE FUNCTION asin
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION asin
POSTHOOK: type: DESCFUNCTION
asin(x) - returns the arc sine of x if -1<=x<=1 or NULL otherwise
PREHOOK: query: DESCRIBE FUNCTION cos
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION cos
POSTHOOK: type: DESCFUNCTION
cos(x) - returns the cosine of x (x is in radians)
PREHOOK: query: DESCRIBE FUNCTION acos
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION acos
POSTHOOK: type: DESCFUNCTION
acos(x) - returns the arc cosine of x if -1<=x<=1 or NULL otherwise
PREHOOK: query: DESCRIBE FUNCTION log10
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION log10
POSTHOOK: type: DESCFUNCTION
log10(x) - Returns the logarithm of x with base 10
PREHOOK: query: DESCRIBE FUNCTION log
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION log
POSTHOOK: type: DESCFUNCTION
log([b], x) - Returns the logarithm of x with base b
PREHOOK: query: DESCRIBE FUNCTION exp
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION exp
POSTHOOK: type: DESCFUNCTION
exp(x) - Returns e to the power of x
PREHOOK: query: DESCRIBE FUNCTION power
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION power
POSTHOOK: type: DESCFUNCTION
power(x1, x2) - raise x1 to the power of x2
PREHOOK: query: DESCRIBE FUNCTION pow
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION pow
POSTHOOK: type: DESCFUNCTION
pow(x1, x2) - raise x1 to the power of x2
PREHOOK: query: DESCRIBE FUNCTION conv
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION conv
POSTHOOK: type: DESCFUNCTION
conv(num, from_base, to_base) - convert num from from_base to to_base
PREHOOK: query: DESCRIBE FUNCTION bin
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION bin
POSTHOOK: type: DESCFUNCTION
bin(n) - returns n in binary
PREHOOK: query: DESCRIBE FUNCTION hex
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION hex
POSTHOOK: type: DESCFUNCTION
hex(n or str) - Convert the argument to hexadecimal 
PREHOOK: query: DESCRIBE FUNCTION unhex
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION unhex
POSTHOOK: type: DESCFUNCTION
unhex(str) - Converts hexadecimal argument to string
PREHOOK: query: DESCRIBE FUNCTION upper
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION upper
POSTHOOK: type: DESCFUNCTION
upper(str) - Returns str with all characters changed to uppercase
PREHOOK: query: DESCRIBE FUNCTION lower
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION lower
POSTHOOK: type: DESCFUNCTION
lower(str) - Returns str with all characters changed to lowercase
PREHOOK: query: DESCRIBE FUNCTION ucase
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ucase
POSTHOOK: type: DESCFUNCTION
ucase(str) - Returns str with all characters changed to uppercase
PREHOOK: query: DESCRIBE FUNCTION lcase
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION lcase
POSTHOOK: type: DESCFUNCTION
lcase(str) - Returns str with all characters changed to lowercase
PREHOOK: query: DESCRIBE FUNCTION trim
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION trim
POSTHOOK: type: DESCFUNCTION
trim(str) - Removes the leading and trailing space characters from str 
PREHOOK: query: DESCRIBE FUNCTION ltrim
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ltrim
POSTHOOK: type: DESCFUNCTION
ltrim(str) - Removes the leading space characters from str 
PREHOOK: query: DESCRIBE FUNCTION rtrim
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION rtrim
POSTHOOK: type: DESCFUNCTION
rtrim(str) - Removes the trailing space characters from str 
PREHOOK: query: DESCRIBE FUNCTION length
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION length
POSTHOOK: type: DESCFUNCTION
length(str) - Returns the length of str 
PREHOOK: query: DESCRIBE FUNCTION reverse
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION reverse
POSTHOOK: type: DESCFUNCTION
reverse(str) - reverse str
PREHOOK: query: DESCRIBE FUNCTION like
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION like
POSTHOOK: type: DESCFUNCTION
like(str, pattern) - Checks if str matches pattern
PREHOOK: query: DESCRIBE FUNCTION rlike
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION rlike
POSTHOOK: type: DESCFUNCTION
str rlike regexp - Returns true if str matches regexp and false otherwise
PREHOOK: query: DESCRIBE FUNCTION regexp
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION regexp
POSTHOOK: type: DESCFUNCTION
str regexp regexp - Returns true if str matches regexp and false otherwise
PREHOOK: query: DESCRIBE FUNCTION regexp_replace
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION regexp_replace
POSTHOOK: type: DESCFUNCTION
regexp_replace(str, regexp, rep) - replace all substrings of str that match regexp with rep
PREHOOK: query: DESCRIBE FUNCTION regexp_extract
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION regexp_extract
POSTHOOK: type: DESCFUNCTION
regexp_extract(str, regexp[, idx]) - extracts a group that matches regexp
PREHOOK: query: DESCRIBE FUNCTION parse_url
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION parse_url
POSTHOOK: type: DESCFUNCTION
parse_url(url, partToExtract[, key]) - extracts a part from a URL
PREHOOK: query: DESCRIBE FUNCTION split
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION split
POSTHOOK: type: DESCFUNCTION
split(str, regex) - Splits str around occurances that match regex
PREHOOK: query: DESCRIBE FUNCTION positive
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION positive
POSTHOOK: type: DESCFUNCTION
positive a - Returns a
PREHOOK: query: DESCRIBE FUNCTION negative
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION negative
POSTHOOK: type: DESCFUNCTION
negative a - Returns -a
PREHOOK: query: DESCRIBE FUNCTION day
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION day
POSTHOOK: type: DESCFUNCTION
day(date) - Returns the date of the month of date
PREHOOK: query: DESCRIBE FUNCTION dayofmonth
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION dayofmonth
POSTHOOK: type: DESCFUNCTION
dayofmonth(date) - Returns the date of the month of date
PREHOOK: query: DESCRIBE FUNCTION month
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION month
POSTHOOK: type: DESCFUNCTION
month(date) - Returns the month of date
PREHOOK: query: DESCRIBE FUNCTION year
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION year
POSTHOOK: type: DESCFUNCTION
year(date) - Returns the year of date
PREHOOK: query: DESCRIBE FUNCTION from_unixtime
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION from_unixtime
POSTHOOK: type: DESCFUNCTION
from_unixtime(unix_time, format) - returns unix_time in the specified format
PREHOOK: query: DESCRIBE FUNCTION unix_timestamp
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION unix_timestamp
POSTHOOK: type: DESCFUNCTION
unix_timestamp([date[, pattern]]) - Returns the UNIX timestamp
PREHOOK: query: DESCRIBE FUNCTION to_date
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION to_date
POSTHOOK: type: DESCFUNCTION
to_date(expr) - Extracts the date part of the date or datetime expression expr
PREHOOK: query: DESCRIBE FUNCTION date_add
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION date_add
POSTHOOK: type: DESCFUNCTION
date_add(start_date, num_days) - Returns the date that is num_days after start_date.
PREHOOK: query: DESCRIBE FUNCTION date_sub
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION date_sub
POSTHOOK: type: DESCFUNCTION
date_sub(start_date, num_days) - Returns the date that is num_days before start_date.
PREHOOK: query: DESCRIBE FUNCTION datediff
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION datediff
POSTHOOK: type: DESCFUNCTION
datediff(date1, date2) - Returns the number of days between date1 and date2
PREHOOK: query: DESCRIBE FUNCTION get_json_object
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION get_json_object
POSTHOOK: type: DESCFUNCTION
get_json_object(json_txt, path) - Extract a json object from path 
PREHOOK: query: DESCRIBE FUNCTION +
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION +
POSTHOOK: type: DESCFUNCTION
a + b - Returns a+b
PREHOOK: query: DESCRIBE FUNCTION -
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION -
POSTHOOK: type: DESCFUNCTION
a - b - Returns the difference a-b
PREHOOK: query: DESCRIBE FUNCTION *
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION *
POSTHOOK: type: DESCFUNCTION
a * b - Multiplies a by b
PREHOOK: query: DESCRIBE FUNCTION /
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION /
POSTHOOK: type: DESCFUNCTION
a / b - Divide a by b
PREHOOK: query: DESCRIBE FUNCTION %
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION %
POSTHOOK: type: DESCFUNCTION
a % b - Returns the remainder when dividing a by b
PREHOOK: query: DESCRIBE FUNCTION div
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION div
POSTHOOK: type: DESCFUNCTION
a div b - Divide a by b rounded to the long integer
PREHOOK: query: DESCRIBE FUNCTION &
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION &
POSTHOOK: type: DESCFUNCTION
a & b - Bitwise and
PREHOOK: query: DESCRIBE FUNCTION |
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION |
POSTHOOK: type: DESCFUNCTION
a | b - Bitwise or
PREHOOK: query: DESCRIBE FUNCTION ^
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ^
POSTHOOK: type: DESCFUNCTION
a ^ b - Bitwise exclusive or
PREHOOK: query: DESCRIBE FUNCTION ~
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION ~
POSTHOOK: type: DESCFUNCTION
~ n - Bitwise not
PREHOOK: query: DESCRIBE FUNCTION =
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION =
POSTHOOK: type: DESCFUNCTION
a = b - Returns TRUE if a equals b and false otherwise
PREHOOK: query: DESCRIBE FUNCTION <>
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION <>
POSTHOOK: type: DESCFUNCTION
a <> b - Returns TRUE if a is not equal to b
PREHOOK: query: DESCRIBE FUNCTION <
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION <
POSTHOOK: type: DESCFUNCTION
a < b - Returns TRUE if a is less than b
PREHOOK: query: DESCRIBE FUNCTION <=
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION <=
POSTHOOK: type: DESCFUNCTION
a <= b - Returns TRUE if b is not greater than a
PREHOOK: query: DESCRIBE FUNCTION >
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION >
POSTHOOK: type: DESCFUNCTION
a > b - Returns TRUE if a is greater than b
PREHOOK: query: DESCRIBE FUNCTION >=
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION >=
POSTHOOK: type: DESCFUNCTION
a >= b - Returns TRUE if b is not smaller than a
PREHOOK: query: DESCRIBE FUNCTION and
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION and
POSTHOOK: type: DESCFUNCTION
a and b - Logical and
PREHOOK: query: DESCRIBE FUNCTION or
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION or
POSTHOOK: type: DESCFUNCTION
a or b - Logical or
PREHOOK: query: DESCRIBE FUNCTION not
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION not
POSTHOOK: type: DESCFUNCTION
not a - Logical not
PREHOOK: query: DESCRIBE FUNCTION isnull
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION isnull
POSTHOOK: type: DESCFUNCTION
isnull a - Returns true if a is NULL and false otherwise
PREHOOK: query: DESCRIBE FUNCTION isnotnull
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION isnotnull
POSTHOOK: type: DESCFUNCTION
isnotnull a - Returns true if a is not NULL and false otherwise
PREHOOK: query: DESCRIBE FUNCTION EXTENDED concat
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED concat
POSTHOOK: type: DESCFUNCTION
concat(str1, str2, ... strN) - returns the concatenation of str1, str2, ... strN
Returns NULL if any argument is NULL.
Example:
  > SELECT concat('abc', 'def') FROM src LIMIT 1;
  'abcdef'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED substr
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED substr
POSTHOOK: type: DESCFUNCTION
substr(str, pos[, len]) - returns the substring of str that starts at pos and is of length len
pos is a 1-based index. If pos<0 the starting position is determined by counting backwards from the end of str.
Example:
   > SELECT substr('Facebook', 5) FROM src LIMIT 1;
  'book'
  > SELECT substr('Facebook', -5) FROM src LIMIT 1;
  'ebook'
  > SELECT substr('Facebook', 5, 1) FROM src LIMIT 1;
  'b'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED substring
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED substring
POSTHOOK: type: DESCFUNCTION
substring(str, pos[, len]) - returns the substring of str that starts at pos and is of length len
pos is a 1-based index. If pos<0 the starting position is determined by counting backwards from the end of str.
Example:
   > SELECT substring('Facebook', 5) FROM src LIMIT 1;
  'book'
  > SELECT substring('Facebook', -5) FROM src LIMIT 1;
  'ebook'
  > SELECT substring('Facebook', 5, 1) FROM src LIMIT 1;
  'b'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED find_in_set
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED find_in_set
POSTHOOK: type: DESCFUNCTION
find_in_set(str,str_array) - Returns the first occurrence  of str in str_array where str_array is a comma-delimited string. Returns null if either argument is null. Returns 0 if the first argument has any commas.
Example:
  > SELECT find_in_set('ab','abc,b,ab,c,def') FROM src LIMIT 1;
  3
  > SELECT * FROM src1 WHERE NOT find_in_set(key,'311,128,345,956')=0;
  311  val_311
  128
PREHOOK: query: DESCRIBE FUNCTION EXTENDED space
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED space
POSTHOOK: type: DESCFUNCTION
space(n) - returns n spaces
Example:
   > SELECT space(2) FROM src LIMIT 1;
  '  '
PREHOOK: query: DESCRIBE FUNCTION EXTENDED repeat
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED repeat
POSTHOOK: type: DESCFUNCTION
repeat(str, n) - repeat str n times 
Example:
  > SELECT repeat('123', 2) FROM src LIMIT 1;
  '123123'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ascii
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ascii
POSTHOOK: type: DESCFUNCTION
ascii(str) - returns the numeric value of the first character of str
Returns 0 if str is empty or NULL if str is NULL
Example:
  > SELECT ascii('222') FROM src LIMIT 1;  50
  > SELECT ascii(2) FROM src LIMIT 1;
  50
PREHOOK: query: DESCRIBE FUNCTION EXTENDED lpad
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED lpad
POSTHOOK: type: DESCFUNCTION
lpad(str, len, pad) - Returns str, left-padded with pad to a length of len
If str is longer than len, the return value is shortened to len characters.
Example:
  > SELECT lpad('hi', 5, '??') FROM src LIMIT 1;
  '???hi'  > SELECT lpad('hi', 1, '??') FROM src LIMIT 1;
  'h'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED rpad
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED rpad
POSTHOOK: type: DESCFUNCTION
rpad(str, len, pad) - Returns str, right-padded with pad to a length of len
If str is longer than len, the return value is shortened to len characters.
Example:
  > SELECT rpad('hi', 5, '??') FROM src LIMIT 1;
  'hi???'  > SELECT rpad('hi', 1, '??') FROM src LIMIT 1;
  'h'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED size
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED size
POSTHOOK: type: DESCFUNCTION
size(a) - Returns the size of a
PREHOOK: query: DESCRIBE FUNCTION EXTENDED round
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED round
POSTHOOK: type: DESCFUNCTION
round(x[, d]) - round x to d decimal places
Example:
  > SELECT round(12.3456, 1) FROM src LIMIT 1;
  12.3'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED floor
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED floor
POSTHOOK: type: DESCFUNCTION
floor(x) - Find the largest integer not greater than x
Example:
  > SELECT floor(-0.1) FROM src LIMIT 1;
  -1
  > SELECT floor(5) FROM src LIMIT 1;
  5
PREHOOK: query: DESCRIBE FUNCTION EXTENDED sqrt
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED sqrt
POSTHOOK: type: DESCFUNCTION
sqrt(x) - returns the square root of x
Example:
   > SELECT sqrt(4) FROM src LIMIT 1;
  2
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ceil
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ceil
POSTHOOK: type: DESCFUNCTION
ceil(x) - Find the smallest integer not smaller than x
Example:
  > SELECT ceil(-0.1) FROM src LIMIT 1;
  0
  > SELECT ceil(5) FROM src LIMIT 1;
  5
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ceiling
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ceiling
POSTHOOK: type: DESCFUNCTION
ceiling(x) - Find the smallest integer not smaller than x
Example:
  > SELECT ceiling(-0.1) FROM src LIMIT 1;
  0
  > SELECT ceiling(5) FROM src LIMIT 1;
  5
PREHOOK: query: DESCRIBE FUNCTION EXTENDED rand
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED rand
POSTHOOK: type: DESCFUNCTION
rand([seed]) - Returns a pseudorandom number between 0 and 1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED abs
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED abs
POSTHOOK: type: DESCFUNCTION
abs(x) - returns the absolute value of x
Example:
  > SELECT abs(0) FROM src LIMIT 1;
  0
  > SELECT abs(-5) FROM src LIMIT 1;
  5
PREHOOK: query: DESCRIBE FUNCTION EXTENDED pmod
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED pmod
POSTHOOK: type: DESCFUNCTION
a pmod b - Compute the positive modulo
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ln
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ln
POSTHOOK: type: DESCFUNCTION
ln(x) - Returns the natural logarithm of x
Example:
  > SELECT ln(1) FROM src LIMIT 1;
  0
PREHOOK: query: DESCRIBE FUNCTION EXTENDED log2
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED log2
POSTHOOK: type: DESCFUNCTION
log2(x) - Returns the logarithm of x with base 2
Example:
  > SELECT log2(2) FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED sin
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED sin
POSTHOOK: type: DESCFUNCTION
sin(x) - returns the sine of x (x is in radians)
Example:
   > SELECT sin(0) FROM src LIMIT 1;
  0
PREHOOK: query: DESCRIBE FUNCTION EXTENDED asin
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED asin
POSTHOOK: type: DESCFUNCTION
asin(x) - returns the arc sine of x if -1<=x<=1 or NULL otherwise
Example:
  > SELECT asin(0) FROM src LIMIT 1;
  0
  > SELECT asin(2) FROM src LIMIT 1;
  NULL
PREHOOK: query: DESCRIBE FUNCTION EXTENDED cos
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED cos
POSTHOOK: type: DESCFUNCTION
cos(x) - returns the cosine of x (x is in radians)
Example:
   > SELECT cos(0) FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED acos
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED acos
POSTHOOK: type: DESCFUNCTION
acos(x) - returns the arc cosine of x if -1<=x<=1 or NULL otherwise
Example:
  > SELECT acos(1) FROM src LIMIT 1;
  0
  > SELECT acos(2) FROM src LIMIT 1;
  NULL
PREHOOK: query: DESCRIBE FUNCTION EXTENDED log10
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED log10
POSTHOOK: type: DESCFUNCTION
log10(x) - Returns the logarithm of x with base 10
Example:
  > SELECT log10(10) FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED log
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED log
POSTHOOK: type: DESCFUNCTION
log([b], x) - Returns the logarithm of x with base b
Example:
  > SELECT log(13, 13) FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED exp
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED exp
POSTHOOK: type: DESCFUNCTION
exp(x) - Returns e to the power of x
Example:
   > SELECT exp(0) FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED power
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED power
POSTHOOK: type: DESCFUNCTION
power(x1, x2) - raise x1 to the power of x2
Example:
  > SELECT power(2, 3) FROM src LIMIT 1;
  8
PREHOOK: query: DESCRIBE FUNCTION EXTENDED pow
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED pow
POSTHOOK: type: DESCFUNCTION
pow(x1, x2) - raise x1 to the power of x2
Example:
  > SELECT pow(2, 3) FROM src LIMIT 1;
  8
PREHOOK: query: DESCRIBE FUNCTION EXTENDED conv
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED conv
POSTHOOK: type: DESCFUNCTION
conv(num, from_base, to_base) - convert num from from_base to to_base
If to_base is negative, treat num as a signed integer,otherwise, treat it as an unsigned integer.
Example:
  > SELECT conv('100', 2, 10) FROM src LIMIT 1;
  '4'
  > SELECT conv(-10, 16, -10) FROM src LIMIT 1;
  '16'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED bin
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED bin
POSTHOOK: type: DESCFUNCTION
bin(n) - returns n in binary
n is a BIGINT. Returns NULL if n is NULL.
Example:
  > SELECT bin(13) FROM src LIMIT 1
  '1101'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED hex
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED hex
POSTHOOK: type: DESCFUNCTION
hex(n or str) - Convert the argument to hexadecimal 
If the argument is a string, returns two hex digits for each character in the string.
If the argument is a number, returns the hexadecimal representation.
Example:
  > SELECT hex(17) FROM src LIMIT 1;
  'H1'
  > SELECT hex('Facebook') FROM src LIMIT 1;
  '46616365626F6F6B'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED unhex
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED unhex
POSTHOOK: type: DESCFUNCTION
unhex(str) - Converts hexadecimal argument to string
Performs the inverse operation of HEX(str). That is, it interprets
each pair of hexadecimal digits in the argument as a number and
converts it to the character represented by the number. The
resulting characters are returned as a binary string.

Example:
> SELECT UNHEX('4D7953514C') from src limit 1;
'MySQL'
> SELECT UNHEX(HEX('string')) from src limit 1;
'string'
> SELECT HEX(UNHEX('1267')) from src limit 1;
'1267'

The characters in the argument string must be legal hexadecimal
digits: '0' .. '9', 'A' .. 'F', 'a' .. 'f'. If UNHEX() encounters
any nonhexadecimal digits in the argument, it returns NULL. Also,
if there are an odd number of characters a leading 0 is appended.
PREHOOK: query: DESCRIBE FUNCTION EXTENDED upper
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED upper
POSTHOOK: type: DESCFUNCTION
upper(str) - Returns str with all characters changed to uppercase
Example:
  > SELECT upper('Facebook') FROM src LIMIT 1;
  'FACEBOOK'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED lower
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED lower
POSTHOOK: type: DESCFUNCTION
lower(str) - Returns str with all characters changed to lowercase
Example:
  > SELECT lower('Facebook') FROM src LIMIT 1;
  'facebook'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ucase
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ucase
POSTHOOK: type: DESCFUNCTION
ucase(str) - Returns str with all characters changed to uppercase
Example:
  > SELECT ucase('Facebook') FROM src LIMIT 1;
  'FACEBOOK'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED lcase
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED lcase
POSTHOOK: type: DESCFUNCTION
lcase(str) - Returns str with all characters changed to lowercase
Example:
  > SELECT lcase('Facebook') FROM src LIMIT 1;
  'facebook'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED trim
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED trim
POSTHOOK: type: DESCFUNCTION
trim(str) - Removes the leading and trailing space characters from str 
Example:
  > SELECT trim('   facebook  ') FROM src LIMIT 1;
  'facebook'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ltrim
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ltrim
POSTHOOK: type: DESCFUNCTION
ltrim(str) - Removes the leading space characters from str 
Example:
  > SELECT ltrim('   facebook') FROM src LIMIT 1;
  'facebook'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED rtrim
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED rtrim
POSTHOOK: type: DESCFUNCTION
rtrim(str) - Removes the trailing space characters from str 
Example:
  > SELECT rtrim('facebook   ') FROM src LIMIT 1;
  'facebook'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED length
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED length
POSTHOOK: type: DESCFUNCTION
length(str) - Returns the length of str 
Example:
  > SELECT length('Facebook') FROM src LIMIT 1;
  8
PREHOOK: query: DESCRIBE FUNCTION EXTENDED reverse
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED reverse
POSTHOOK: type: DESCFUNCTION
reverse(str) - reverse str
Example:
  > SELECT reverse('Facebook') FROM src LIMIT 1;
  'koobecaF'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED like
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED like
POSTHOOK: type: DESCFUNCTION
like(str, pattern) - Checks if str matches pattern
Example:
  > SELECT a.* FROM srcpart a WHERE a.hr like '%2' LIMIT 1;
  27      val_27  2008-04-08      12
PREHOOK: query: DESCRIBE FUNCTION EXTENDED rlike
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED rlike
POSTHOOK: type: DESCFUNCTION
str rlike regexp - Returns true if str matches regexp and false otherwise
Example:
  > SELECT 'fb' rlike '.*' FROM src LIMIT 1;
  true
PREHOOK: query: DESCRIBE FUNCTION EXTENDED regexp
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED regexp
POSTHOOK: type: DESCFUNCTION
str regexp regexp - Returns true if str matches regexp and false otherwise
Example:
  > SELECT 'fb' regexp '.*' FROM src LIMIT 1;
  true
PREHOOK: query: DESCRIBE FUNCTION EXTENDED regexp_replace
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED regexp_replace
POSTHOOK: type: DESCFUNCTION
regexp_replace(str, regexp, rep) - replace all substrings of str that match regexp with rep
Example:
  > SELECT regexp_replace('100-200', '(\d+)', 'num') FROM src LIMIT 1;
  'num-num'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED regexp_extract
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED regexp_extract
POSTHOOK: type: DESCFUNCTION
regexp_extract(str, regexp[, idx]) - extracts a group that matches regexp
Example:
  > SELECT regexp_extract('100-200', '(\d+)-(\d+)', 1) FROM src LIMIT 1;
  '100'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED parse_url
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED parse_url
POSTHOOK: type: DESCFUNCTION
parse_url(url, partToExtract[, key]) - extracts a part from a URL
Parts: HOST, PATH, QUERY, REF, PROTOCOL, AUTHORITY, FILE, USERINFO
key specifies which query to extract
Example:
  > SELECT parse_url('http://facebook.com/path/p1.php?query=1', 'HOST') FROM src LIMIT 1;
  'facebook.com'
  > SELECT parse_url('http://facebook.com/path/p1.php?query=1', 'QUERY') FROM src LIMIT 1;
  'query=1'
  > SELECT parse_url('http://facebook.com/path/p1.php?query=1', 'QUERY', 'query') FROM src LIMIT 1;
  '1'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED split
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED split
POSTHOOK: type: DESCFUNCTION
split(str, regex) - Splits str around occurances that match regex
Example:
  > SELECT split('oneAtwoBthreeC', '[ABC]') FROM src LIMIT 1;
  ["one", "two", "three"]
PREHOOK: query: DESCRIBE FUNCTION EXTENDED positive
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED positive
POSTHOOK: type: DESCFUNCTION
positive a - Returns a
PREHOOK: query: DESCRIBE FUNCTION EXTENDED negative
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED negative
POSTHOOK: type: DESCFUNCTION
negative a - Returns -a
PREHOOK: query: DESCRIBE FUNCTION EXTENDED day
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED day
POSTHOOK: type: DESCFUNCTION
day(date) - Returns the date of the month of date
date is a string in the format of 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'.
Example:
   > SELECT day('2009-30-07', 1) FROM src LIMIT 1;
  30
PREHOOK: query: DESCRIBE FUNCTION EXTENDED dayofmonth
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED dayofmonth
POSTHOOK: type: DESCFUNCTION
dayofmonth(date) - Returns the date of the month of date
date is a string in the format of 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'.
Example:
   > SELECT dayofmonth('2009-30-07', 1) FROM src LIMIT 1;
  30
PREHOOK: query: DESCRIBE FUNCTION EXTENDED month
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED month
POSTHOOK: type: DESCFUNCTION
month(date) - Returns the month of date
Example:
  > SELECT month('2009-30-07') FROM src LIMIT 1;
  7
PREHOOK: query: DESCRIBE FUNCTION EXTENDED year
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED year
POSTHOOK: type: DESCFUNCTION
year(date) - Returns the year of date
date is a string in the format of 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'.
Example:
   > SELECT year('2009-30-07', 1) FROM src LIMIT 1;
  2009
PREHOOK: query: DESCRIBE FUNCTION EXTENDED from_unixtime
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED from_unixtime
POSTHOOK: type: DESCFUNCTION
from_unixtime(unix_time, format) - returns unix_time in the specified format
Example:
  > SELECT from_unixtime(0, 'yyyy-MM-dd HH:mm:ss') FROM src LIMIT 1;
  '1970-01-01 00:00:00'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED unix_timestamp
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED unix_timestamp
POSTHOOK: type: DESCFUNCTION
unix_timestamp([date[, pattern]]) - Returns the UNIX timestamp
Converts the current or specified time to number of seconds since 1970-01-01.
PREHOOK: query: DESCRIBE FUNCTION EXTENDED to_date
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED to_date
POSTHOOK: type: DESCFUNCTION
to_date(expr) - Extracts the date part of the date or datetime expression expr
Example:
   > SELECT to_date('2009-30-07 04:17:52') FROM src LIMIT 1;
  '2009-30-07'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED date_add
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED date_add
POSTHOOK: type: DESCFUNCTION
date_add(start_date, num_days) - Returns the date that is num_days after start_date.
start_date is a string in the format 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'. num_days is a number. The time part of start_date is ignored.
Example:
   > SELECT date_add('2009-30-07', 1) FROM src LIMIT 1;
  '2009-31-07'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED date_sub
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED date_sub
POSTHOOK: type: DESCFUNCTION
date_sub(start_date, num_days) - Returns the date that is num_days before start_date.
start_date is a string in the format 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'. num_days is a number. The time part of start_date is ignored.
Example:
   > SELECT date_sub('2009-30-07', 1) FROM src LIMIT 1;
  '2009-29-07'
PREHOOK: query: DESCRIBE FUNCTION EXTENDED datediff
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED datediff
POSTHOOK: type: DESCFUNCTION
datediff(date1, date2) - Returns the number of days between date1 and date2
date1 and date2 are strings in the format 'yyyy-MM-dd HH:mm:ss' or 'yyyy-MM-dd'. The time parts are ignored.If date1 is earlier than date2, the result is negative.
Example:
   > SELECT datediff('2009-30-07', '2009-31-07') FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED get_json_object
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED get_json_object
POSTHOOK: type: DESCFUNCTION
get_json_object(json_txt, path) - Extract a json object from path 
Extract json object from a json string based on json path specified, and return json string of the extracted json object. It will return null if the input json string is invalid.
A limited version of JSONPath supported:
  $   : Root object
  .   : Child operator
  []  : Subscript operator for array
  *   : Wildcard for []
Syntax not supported that's worth noticing:
  ''  : Zero length string as key
  ..  : Recursive descent
  &amp;#064;   : Current object/element
  ()  : Script expression
  ?() : Filter (script) expression.
  [,] : Union operator
  [start:end:step] : array slice operator

PREHOOK: query: DESCRIBE FUNCTION EXTENDED +
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED +
POSTHOOK: type: DESCFUNCTION
a + b - Returns a+b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED -
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED -
POSTHOOK: type: DESCFUNCTION
a - b - Returns the difference a-b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED *
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED *
POSTHOOK: type: DESCFUNCTION
a * b - Multiplies a by b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED /
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED /
POSTHOOK: type: DESCFUNCTION
a / b - Divide a by b
Example:
  > SELECT 3 / 2 FROM src LIMIT 1;
  1.5
PREHOOK: query: DESCRIBE FUNCTION EXTENDED %
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED %
POSTHOOK: type: DESCFUNCTION
a % b - Returns the remainder when dividing a by b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED div
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED div
POSTHOOK: type: DESCFUNCTION
a div b - Divide a by b rounded to the long integer
Example:
  > SELECT 3 div 2 FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED &
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED &
POSTHOOK: type: DESCFUNCTION
a & b - Bitwise and
Example:
  > SELECT 3 & 5 FROM src LIMIT 1;
  1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED |
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED |
POSTHOOK: type: DESCFUNCTION
a | b - Bitwise or
Example:
  > SELECT 3 | 5 FROM src LIMIT 1;
  7
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ^
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ^
POSTHOOK: type: DESCFUNCTION
a ^ b - Bitwise exclusive or
Example:
  > SELECT 3 ^ 5 FROM src LIMIT 1;
  2
PREHOOK: query: DESCRIBE FUNCTION EXTENDED ~
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED ~
POSTHOOK: type: DESCFUNCTION
~ n - Bitwise not
Example:
  > SELECT ~ 0 FROM src LIMIT 1;
  -1
PREHOOK: query: DESCRIBE FUNCTION EXTENDED =
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED =
POSTHOOK: type: DESCFUNCTION
a = b - Returns TRUE if a equals b and false otherwise
PREHOOK: query: DESCRIBE FUNCTION EXTENDED <>
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED <>
POSTHOOK: type: DESCFUNCTION
a <> b - Returns TRUE if a is not equal to b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED <
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED <
POSTHOOK: type: DESCFUNCTION
a < b - Returns TRUE if a is less than b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED <=
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED <=
POSTHOOK: type: DESCFUNCTION
a <= b - Returns TRUE if b is not greater than a
PREHOOK: query: DESCRIBE FUNCTION EXTENDED >
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED >
POSTHOOK: type: DESCFUNCTION
a > b - Returns TRUE if a is greater than b
PREHOOK: query: DESCRIBE FUNCTION EXTENDED >=
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED >=
POSTHOOK: type: DESCFUNCTION
a >= b - Returns TRUE if b is not smaller than a
PREHOOK: query: DESCRIBE FUNCTION EXTENDED and
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED and
POSTHOOK: type: DESCFUNCTION
a and b - Logical and
Example:
  > SELECT * FROM srcpart WHERE src.hr=12 and src.hr='2008-04-08' LIMIT 1;
  27      val_27  2008-04-08      12
PREHOOK: query: DESCRIBE FUNCTION EXTENDED or
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED or
POSTHOOK: type: DESCFUNCTION
a or b - Logical or
PREHOOK: query: DESCRIBE FUNCTION EXTENDED not
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED not
POSTHOOK: type: DESCFUNCTION
not a - Logical not
PREHOOK: query: DESCRIBE FUNCTION EXTENDED isnull
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED isnull
POSTHOOK: type: DESCFUNCTION
isnull a - Returns true if a is NULL and false otherwise
PREHOOK: query: DESCRIBE FUNCTION EXTENDED isnotnull
PREHOOK: type: DESCFUNCTION
POSTHOOK: query: DESCRIBE FUNCTION EXTENDED isnotnull
POSTHOOK: type: DESCFUNCTION
isnotnull a - Returns true if a is not NULL and false otherwise
