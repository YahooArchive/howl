PREHOOK: query: EXPLAIN
SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_JOIN (TOK_TABREF src src1) (TOK_TABREF src src2) (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)) (< (. (TOK_TABLE_OR_COL src1) key) 10))) (TOK_TABREF src src3) (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)) (< (. (TOK_TABLE_OR_COL src3) key) 20)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src1) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src1) value)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src2) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src2) value)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src3) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src3) value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src2 
          TableScan
            alias: src2
            Reduce Output Operator
              key expressions:
                    expr: key
                    type: string
              sort order: +
              Map-reduce partition columns:
                    expr: key
                    type: string
              tag: 1
              value expressions:
                    expr: key
                    type: string
                    expr: value
                    type: string
        src3 
          TableScan
            alias: src3
            Filter Operator
              predicate:
                  expr: (key < 20)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 20)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 2
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
        src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 0
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Right Outer Join0 to 2
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0} {VALUE._col1}
            2 {VALUE._col0} {VALUE._col1}
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col2
                  type: string
                  expr: _col3
                  type: string
                  expr: _col4
                  type: string
                  expr: _col5
                  type: string
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
        file:/data/users/njain/hive5/hive5/build/ql/tmp/1765380634/10002 
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
              sort order: ++++++
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
      Reduce Operator Tree:
        Extract
          File Output Operator
            compressed: false
            GlobalTableId: 0
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: file:/data/users/njain/hive5/hive5/build/ql/tmp/1875152381/10000
POSTHOOK: query: SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: file:/data/users/njain/hive5/hive5/build/ql/tmp/1875152381/10000
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	11	val_11
NULL	NULL	NULL	NULL	12	val_12
NULL	NULL	NULL	NULL	12	val_12
NULL	NULL	NULL	NULL	15	val_15
NULL	NULL	NULL	NULL	15	val_15
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	18	val_18
NULL	NULL	NULL	NULL	18	val_18
NULL	NULL	NULL	NULL	19	val_19
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
2	val_2	2	val_2	2	val_2
4	val_4	4	val_4	4	val_4
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
8	val_8	8	val_8	8	val_8
9	val_9	9	val_9	9	val_9
PREHOOK: query: EXPLAIN
SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10 AND src2.key < 15) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10 AND src2.key < 15) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_JOIN (TOK_TABREF src src1) (TOK_TABREF src src2) (AND (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)) (< (. (TOK_TABLE_OR_COL src1) key) 10)) (< (. (TOK_TABLE_OR_COL src2) key) 15))) (TOK_TABREF src src3) (AND (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)) (< (. (TOK_TABLE_OR_COL src3) key) 20)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_SORTBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src1) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src1) value)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src2) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src2) value)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src3) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL src3) value)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        src2 
          TableScan
            alias: src2
            Filter Operator
              predicate:
                  expr: (key < 15)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 15)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 1
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
        src3 
          TableScan
            alias: src3
            Filter Operator
              predicate:
                  expr: (key < 20)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 20)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 2
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
        src1 
          TableScan
            alias: src1
            Filter Operator
              predicate:
                  expr: (key < 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key < 10)
                    type: boolean
                Reduce Output Operator
                  key expressions:
                        expr: key
                        type: string
                  sort order: +
                  Map-reduce partition columns:
                        expr: key
                        type: string
                  tag: 0
                  value expressions:
                        expr: key
                        type: string
                        expr: value
                        type: string
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Right Outer Join0 to 2
          condition expressions:
            0 {VALUE._col0} {VALUE._col1}
            1 {VALUE._col0} {VALUE._col1}
            2 {VALUE._col0} {VALUE._col1}
          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: _col1
                  type: string
                  expr: _col2
                  type: string
                  expr: _col3
                  type: string
                  expr: _col4
                  type: string
                  expr: _col5
                  type: string
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
        file:/data/users/njain/hive5/hive5/build/ql/tmp/225468980/10002 
            Reduce Output Operator
              key expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
              sort order: ++++++
              tag: -1
              value expressions:
                    expr: _col0
                    type: string
                    expr: _col1
                    type: string
                    expr: _col2
                    type: string
                    expr: _col3
                    type: string
                    expr: _col4
                    type: string
                    expr: _col5
                    type: string
      Reduce Operator Tree:
        Extract
          File Output Operator
            compressed: false
            GlobalTableId: 0
            table:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1


PREHOOK: query: SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10 AND src2.key < 15) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: file:/data/users/njain/hive5/hive5/build/ql/tmp/2054907738/10000
POSTHOOK: query: SELECT * FROM src src1 JOIN src src2 ON (src1.key = src2.key AND src1.key < 10 AND src2.key < 15) RIGHT OUTER JOIN src src3 ON (src1.key = src3.key AND src3.key < 20)
SORT BY src1.key, src1.value, src2.key, src2.value, src3.key, src3.value
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: file:/data/users/njain/hive5/hive5/build/ql/tmp/2054907738/10000
NULL	NULL	NULL	NULL	10	val_10
NULL	NULL	NULL	NULL	11	val_11
NULL	NULL	NULL	NULL	12	val_12
NULL	NULL	NULL	NULL	12	val_12
NULL	NULL	NULL	NULL	15	val_15
NULL	NULL	NULL	NULL	15	val_15
NULL	NULL	NULL	NULL	17	val_17
NULL	NULL	NULL	NULL	18	val_18
NULL	NULL	NULL	NULL	18	val_18
NULL	NULL	NULL	NULL	19	val_19
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
0	val_0	0	val_0	0	val_0
2	val_2	2	val_2	2	val_2
4	val_4	4	val_4	4	val_4
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
5	val_5	5	val_5	5	val_5
8	val_8	8	val_8	8	val_8
9	val_9	9	val_9	9	val_9
